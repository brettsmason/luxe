///* ========================================================================
//   #HIDE/SHOW VISUALLY
//   ======================================================================== */

/// Makes an element visually hidden, but still accessible to keyboards and assistive devices.
/// @link http://snook.ca/archives/html_and_css/hiding-content-for-accessibility Hiding Content for Accessibility
/// @link http://hugogiraudel.com/2016/10/13/css-hide-and-seek/
///
/// @param {Boolean} $enforce - If `true`, use `!important` on applied properties
@mixin hide-visually($enforce: true) {
	$important: if($enforce, "!important", null);

	border: 0 #{$important};
	clip: rect(1px, 1px, 1px, 1px) #{$important};
	-webkit-clip-path: inset(50%) #{$important};
	clip-path: inset(50%) #{$important};
	height: 1px #{$important};
	overflow: hidden #{$important};
	padding: 0 #{$important};
	position: absolute #{$important};
	white-space: nowrap #{$important};
	width: 1px #{$important};
	word-wrap: normal #{$important};
}

/// This reverses `hide-visually()`.
///
/// @param {Boolean} $enforce - If `true`, use `!important` on applied properties
@mixin show-visually($enforce: true) {
	$important: if($enforce, "!important", null);

	clip: auto #{$important};
	height: auto #{$important};
	overflow: visible #{$important};

	position: static #{$important};
	white-space: normal #{$important};
	width: auto #{$important};
}
