////
/// Functions for working with units.
///
/// @group Tools
////

/// Removes the unit (e.g. px, em, rem) from a value, returning the number only.
///
/// @param {Number} $num - Number to strip unit from.
///
/// @returns {Number} The same number, sans unit.
@function strip-unit($num) {
	@return $num / ($num * 0 + 1);
}

/// Converts a pixel value to matching rem value. *Any* value passed, regardless of unit, is assumed to be a pixel value. By default, the base pixel value used to calculate the rem value is taken from the `$global-font-size` variable.
///
/// @param {Number} $value - Pixel value to convert.
/// @param {Number} $base [null] - Base for pixel conversion.
///
/// @returns {Number} A number in rems, calculated based on the given value and the base pixel value. rem values are passed through as is.
@function rem($value, $base: null) {

	// If no base is defined, defer to the global font size
	@if $base == null {
		$base: $global-font-size;
	}

	// Check if the value is a number
	@if type-of($value) != "number" {
		@warn inspect($value) + " was passed to rem(), which is not a number.";
		@return $value;
	}

	// Calculate rem if units for $value is not rem or em
	@if unit($value) == "px" {
		$value: strip-unit($value) / strip-unit($base) * 1rem;
	}

	@return $value;
}
